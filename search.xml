<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python 学习笔记（二）</title>
      <link href="/2025/05/26/pythonx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03/"/>
      <url>/2025/05/26/pythonx%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B03/</url>
      
        <content type="html"><![CDATA[<h1 id="🐍-Python-学习笔记（二）"><a href="#🐍-Python-学习笔记（二）" class="headerlink" title="🐍 Python 学习笔记（二）"></a>🐍 Python 学习笔记（二）</h1><p>承接上篇基础内容，本篇聚焦<strong>面向对象编程、常用模块进阶及实战技巧</strong>，助力从基础迈向应用。</p><hr><h2 id="👥-1-面向对象编程（OOP）"><a href="#👥-1-面向对象编程（OOP）" class="headerlink" title="👥 1. 面向对象编程（OOP）"></a>👥 1. 面向对象编程（OOP）</h2><h3 id="🏗️-类与对象"><a href="#🏗️-类与对象" class="headerlink" title="🏗️ 类与对象"></a>🏗️ 类与对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age</span>):  <span class="comment"># 构造方法</span></span><br><span class="line">        <span class="variable language_">self</span>.name = name            <span class="comment"># 实例属性</span></span><br><span class="line">        <span class="variable language_">self</span>.age = age</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bark</span>(<span class="params">self</span>):                 <span class="comment"># 实例方法</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;self.name&#125;</span> 汪汪叫，年龄 <span class="subst">&#123;self.age&#125;</span> 岁&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建对象</span></span><br><span class="line">my_dog = Dog(<span class="string">&quot;小白&quot;</span>, <span class="number">3</span>)</span><br><span class="line"><span class="built_in">print</span>(my_dog.bark())  <span class="comment"># 输出：小白 汪汪叫，年龄 3 岁</span></span><br></pre></td></tr></table></figure><h3 id="🔄-继承与多态"><a href="#🔄-继承与多态" class="headerlink" title="🔄 继承与多态"></a>🔄 继承与多态</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 子类继承父类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Pet</span>(<span class="title class_ inherited__">Dog</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, age, owner</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name, age)  <span class="comment"># 调用父类构造方法</span></span><br><span class="line">        <span class="variable language_">self</span>.owner = owner           <span class="comment"># 新增属性</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show_owner</span>(<span class="params">self</span>):           <span class="comment"># 新增方法</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;主人是 <span class="subst">&#123;self.owner&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 多态示例</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span>(<span class="title class_ inherited__">Dog</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">bark</span>(<span class="params">self</span>):                 <span class="comment"># 重写父类方法</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;<span class="subst">&#123;self.name&#125;</span> 喵喵叫&quot;</span></span><br><span class="line"></span><br><span class="line">pet = Pet(<span class="string">&quot;豆豆&quot;</span>, <span class="number">2</span>, <span class="string">&quot;小明&quot;</span>)</span><br><span class="line">cat = Cat(<span class="string">&quot;小花&quot;</span>, <span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(pet.show_owner())  <span class="comment"># 主人是 小明</span></span><br><span class="line"><span class="built_in">print</span>(cat.bark())        <span class="comment"># 小花 喵喵叫</span></span><br></pre></td></tr></table></figure><hr><h2 id="📦-2-常用模块深度解析"><a href="#📦-2-常用模块深度解析" class="headerlink" title="📦 2. 常用模块深度解析"></a>📦 2. 常用模块深度解析</h2><h3 id="📅-datetime-日期时间处理"><a href="#📅-datetime-日期时间处理" class="headerlink" title="📅 datetime 日期时间处理"></a>📅 datetime 日期时间处理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前时间</span></span><br><span class="line">now = datetime.datetime.now()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;当前时间：<span class="subst">&#123;now&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 时间计算</span></span><br><span class="line">one_week_ago = now - datetime.timedelta(weeks=<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;一周前：<span class="subst">&#123;one_week_ago.strftime(<span class="string">&#x27;%Y-%m-%d&#x27;</span>)&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="📊-random-随机数生成"><a href="#📊-random-随机数生成" class="headerlink" title="📊 random 随机数生成"></a>📊 random 随机数生成</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成随机整数</span></span><br><span class="line"><span class="built_in">print</span>(random.randint(<span class="number">1</span>, <span class="number">10</span>))   <span class="comment"># 1-10 之间的随机整数</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 随机打乱列表</span></span><br><span class="line">nums = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line">random.shuffle(nums)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;打乱后的列表：&quot;</span>, nums)</span><br></pre></td></tr></table></figure><h3 id="📡-requests-HTTP-请求（需安装）"><a href="#📡-requests-HTTP-请求（需安装）" class="headerlink" title="📡 requests HTTP 请求（需安装）"></a>📡 requests HTTP 请求（需安装）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装：pip install requests</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">response = requests.get(<span class="string">&quot;https://api.example.com/data&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> response.status_code == <span class="number">200</span>:</span><br><span class="line">    data = response.json()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;请求数据：&quot;</span>, data)</span><br></pre></td></tr></table></figure><hr><h2 id="🛠️-3-实用编程技巧"><a href="#🛠️-3-实用编程技巧" class="headerlink" title="🛠️ 3. 实用编程技巧"></a>🛠️ 3. 实用编程技巧</h2><h3 id="🧵-列表推导式"><a href="#🧵-列表推导式" class="headerlink" title="🧵 列表推导式"></a>🧵 列表推导式</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成偶数列表</span></span><br><span class="line">even_nums = [x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>) <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(even_nums)  <span class="comment"># 输出：[0, 2, 4, 6, 8]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 字典推导式</span></span><br><span class="line">square_dict = &#123;x: x**<span class="number">2</span> <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)&#125;</span><br><span class="line"><span class="built_in">print</span>(square_dict)  <span class="comment"># 输出：&#123;0: 0, 1: 1, 2: 4, 3: 9, 4: 16&#125;</span></span><br></pre></td></tr></table></figure><h3 id="📌-生成器（Generator）"><a href="#📌-生成器（Generator）" class="headerlink" title="📌 生成器（Generator）"></a>📌 生成器（Generator）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成器表达式</span></span><br><span class="line">even_gen = (x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>) <span class="keyword">if</span> x % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> even_gen:</span><br><span class="line">    <span class="built_in">print</span>(num, end=<span class="string">&quot; &quot;</span>)  <span class="comment"># 输出：0 2 4 6 8</span></span><br></pre></td></tr></table></figure><h3 id="🧩-装饰器（Decorator）"><a href="#🧩-装饰器（Decorator）" class="headerlink" title="🧩 装饰器（Decorator）"></a>🧩 装饰器（Decorator）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计函数执行时间的装饰器</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">timer</span>(<span class="params">func</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">wrapper</span>():</span><br><span class="line">        start = time.time()</span><br><span class="line">        func()</span><br><span class="line">        end = time.time()</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;执行时间：<span class="subst">&#123;end - start:<span class="number">.2</span>f&#125;</span> 秒&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="meta">@timer  </span><span class="comment"># 应用装饰器</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_function</span>():</span><br><span class="line">    time.sleep(<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;函数执行完毕&quot;</span>)</span><br><span class="line"></span><br><span class="line">test_function()  <span class="comment"># 输出：函数执行完毕 执行时间：1.00 秒</span></span><br></pre></td></tr></table></figure><hr><h2 id="📊-4-数据处理入门（CSV-文件操作）"><a href="#📊-4-数据处理入门（CSV-文件操作）" class="headerlink" title="📊 4. 数据处理入门（CSV 文件操作）"></a>📊 4. 数据处理入门（CSV 文件操作）</h2><h3 id="📄-读取-CSV-文件"><a href="#📄-读取-CSV-文件" class="headerlink" title="📄 读取 CSV 文件"></a>📄 读取 CSV 文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;data.csv&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    reader = csv.DictReader(f)</span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> reader:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;姓名：<span class="subst">&#123;row[<span class="string">&#x27;name&#x27;</span>]&#125;</span>，年龄：<span class="subst">&#123;row[<span class="string">&#x27;age&#x27;</span>]&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="✍️-写入-CSV-文件"><a href="#✍️-写入-CSV-文件" class="headerlink" title="✍️ 写入 CSV 文件"></a>✍️ 写入 CSV 文件</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;output.csv&quot;</span>, <span class="string">&quot;w&quot;</span>, newline=<span class="string">&quot;&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    fieldnames = [<span class="string">&quot;name&quot;</span>, <span class="string">&quot;age&quot;</span>]</span><br><span class="line">    writer = csv.DictWriter(f, fieldnames=fieldnames)</span><br><span class="line"></span><br><span class="line">    writer.writeheader()</span><br><span class="line">    writer.writerow(&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Bob&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">25</span>&#125;)</span><br><span class="line">    writer.writerow(&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Lily&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">22</span>&#125;)</span><br></pre></td></tr></table></figure><hr><h2 id="🚀-5-实战案例：简易学生信息管理系统"><a href="#🚀-5-实战案例：简易学生信息管理系统" class="headerlink" title="🚀 5. 实战案例：简易学生信息管理系统"></a>🚀 5. 实战案例：简易学生信息管理系统</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 学生类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, sid, name, age</span>):</span><br><span class="line">        <span class="variable language_">self</span>.sid = sid    <span class="comment"># 学号</span></span><br><span class="line">        <span class="variable language_">self</span>.name = name  <span class="comment"># 姓名</span></span><br><span class="line">        <span class="variable language_">self</span>.age = age    <span class="comment"># 年龄</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 管理系统核心逻辑</span></span><br><span class="line">students = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add_student</span>():</span><br><span class="line">    sid = <span class="built_in">input</span>(<span class="string">&quot;请输入学号：&quot;</span>)</span><br><span class="line">    name = <span class="built_in">input</span>(<span class="string">&quot;请输入姓名：&quot;</span>)</span><br><span class="line">    age = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入年龄：&quot;</span>))</span><br><span class="line">    students.append(Student(sid, name, age))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;学生添加成功！&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">list_students</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;</span></span><br><span class="line"><span class="string">学生列表：&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> idx, stu <span class="keyword">in</span> <span class="built_in">enumerate</span>(students, <span class="number">1</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;idx&#125;</span>. 学号：<span class="subst">&#123;stu.sid&#125;</span>，姓名：<span class="subst">&#123;stu.name&#125;</span>，年龄：<span class="subst">&#123;stu.age&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主程序</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    choice = <span class="built_in">input</span>(<span class="string">&quot;</span></span><br><span class="line"><span class="string">请选择操作：1.添加学生 2.查看列表 3.退出</span></span><br><span class="line"><span class="string">&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> choice == <span class="string">&quot;1&quot;</span>:</span><br><span class="line">        add_student()</span><br><span class="line">    <span class="keyword">elif</span> choice == <span class="string">&quot;2&quot;</span>:</span><br><span class="line">        list_students()</span><br><span class="line">    <span class="keyword">elif</span> choice == <span class="string">&quot;3&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;系统退出，感谢使用！&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;无效选择，请重新输入！&quot;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 编程学习 </tag>
            
            <tag> 初学笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 学习笔记（一）</title>
      <link href="/2025/05/25/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/"/>
      <url>/2025/05/25/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01/</url>
      
        <content type="html"><![CDATA[<h1 id="🐍-Python-学习笔记（一）"><a href="#🐍-Python-学习笔记（一）" class="headerlink" title="🐍 Python 学习笔记（一）"></a>🐍 Python 学习笔记（一）</h1><p>记录 Python 编程基础，适合初学者快速上手与复习。</p><h2 id="✨-1-基本语法"><a href="#✨-1-基本语法" class="headerlink" title="✨ 1. 基本语法"></a>✨ 1. 基本语法</h2><h3 id="🖋️-注释"><a href="#🖋️-注释" class="headerlink" title="🖋️ 注释"></a>🖋️ 注释</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是单行注释</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27; </span></span><br><span class="line"><span class="string">这是多行注释</span></span><br><span class="line"><span class="string">可以用于文档说明</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="🧮-变量与数据类型"><a href="#🧮-变量与数据类型" class="headerlink" title="🧮 变量与数据类型"></a>🧮 变量与数据类型</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">10</span>            <span class="comment"># 整数</span></span><br><span class="line">y = <span class="number">3.14</span>          <span class="comment"># 浮点数</span></span><br><span class="line">name = <span class="string">&quot;Alice&quot;</span>    <span class="comment"># 字符串</span></span><br><span class="line">is_ok = <span class="literal">True</span>      <span class="comment"># 布尔值</span></span><br></pre></td></tr></table></figure><h3 id="📦-数据类型转换"><a href="#📦-数据类型转换" class="headerlink" title="📦 数据类型转换"></a>📦 数据类型转换</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">int</span>(<span class="string">&quot;123&quot;</span>)        <span class="comment"># 转为整数</span></span><br><span class="line"><span class="built_in">str</span>(<span class="number">456</span>)          <span class="comment"># 转为字符串</span></span><br><span class="line"><span class="built_in">float</span>(<span class="string">&quot;3.14&quot;</span>)     <span class="comment"># 转为浮点数</span></span><br></pre></td></tr></table></figure><h2 id="🔁-2-控制语句"><a href="#🔁-2-控制语句" class="headerlink" title="🔁 2. 控制语句"></a>🔁 2. 控制语句</h2><h3 id="📍-条件判断"><a href="#📍-条件判断" class="headerlink" title="📍 条件判断"></a>📍 条件判断</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">age = <span class="number">18</span></span><br><span class="line"><span class="keyword">if</span> age &gt;= <span class="number">18</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;成年&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> age &gt;= <span class="number">12</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;青少年&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;儿童&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="🔄-循环语句"><a href="#🔄-循环语句" class="headerlink" title="🔄 循环语句"></a>🔄 循环语句</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># for 循环</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># while 循环</span></span><br><span class="line">n = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> n &lt; <span class="number">5</span>:</span><br><span class="line">    <span class="built_in">print</span>(n)</span><br><span class="line">    n += <span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="📚-3-数据结构"><a href="#📚-3-数据结构" class="headerlink" title="📚 3. 数据结构"></a>📚 3. 数据结构</h2><h3 id="📃-列表-List"><a href="#📃-列表-List" class="headerlink" title="📃 列表 List"></a>📃 列表 List</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">fruits = [<span class="string">&quot;apple&quot;</span>, <span class="string">&quot;banana&quot;</span>, <span class="string">&quot;cherry&quot;</span>]</span><br><span class="line">fruits.append(<span class="string">&quot;orange&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(fruits[<span class="number">1</span>])     <span class="comment"># banana</span></span><br></pre></td></tr></table></figure><h3 id="🧩-元组-Tuple"><a href="#🧩-元组-Tuple" class="headerlink" title="🧩 元组 Tuple"></a>🧩 元组 Tuple</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">point = (<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">x, y = point</span><br></pre></td></tr></table></figure><h3 id="🗂️-字典-Dictionary"><a href="#🗂️-字典-Dictionary" class="headerlink" title="🗂️ 字典 Dictionary"></a>🗂️ 字典 Dictionary</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">person = &#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;Tom&quot;</span>, <span class="string">&quot;age&quot;</span>: <span class="number">20</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(person[<span class="string">&quot;name&quot;</span>])</span><br><span class="line">person[<span class="string">&quot;city&quot;</span>] = <span class="string">&quot;Beijing&quot;</span></span><br></pre></td></tr></table></figure><h3 id="📑-集合-Set"><a href="#📑-集合-Set" class="headerlink" title="📑 集合 Set"></a>📑 集合 Set</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nums = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">nums.add(<span class="number">4</span>)</span><br></pre></td></tr></table></figure><h2 id="🛠️-4-函数与模块"><a href="#🛠️-4-函数与模块" class="headerlink" title="🛠️ 4. 函数与模块"></a>🛠️ 4. 函数与模块</h2><h3 id="🔧-定义函数"><a href="#🔧-定义函数" class="headerlink" title="🔧 定义函数"></a>🔧 定义函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">greet</span>(<span class="params">name</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">f&quot;Hello, <span class="subst">&#123;name&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(greet(<span class="string">&quot;Python&quot;</span>))</span><br></pre></td></tr></table></figure><h3 id="📦-导入模块"><a href="#📦-导入模块" class="headerlink" title="📦 导入模块"></a>📦 导入模块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="built_in">print</span>(math.sqrt(<span class="number">16</span>))    <span class="comment"># 输出：4.0</span></span><br></pre></td></tr></table></figure><h2 id="📌-5-文件操作"><a href="#📌-5-文件操作" class="headerlink" title="📌 5. 文件操作"></a>📌 5. 文件操作</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 写入文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;example.txt&quot;</span>, <span class="string">&quot;w&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(<span class="string">&quot;Hello, file!&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;example.txt&quot;</span>, <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    content = f.read()</span><br><span class="line">    <span class="built_in">print</span>(content)</span><br></pre></td></tr></table></figure><h2 id="🧪-6-异常处理"><a href="#🧪-6-异常处理" class="headerlink" title="🧪 6. 异常处理"></a>🧪 6. 异常处理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    x = <span class="number">10</span> / <span class="number">0</span></span><br><span class="line"><span class="keyword">except</span> ZeroDivisionError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;不能除以0&quot;</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;结束&quot;</span>)</span><br></pre></td></tr></table></figure><hr><p>📘 <strong>小结：</strong> 本节内容涵盖 Python 的基本语法、控制流程、数据结构和文件处理，是入门 Python 的基石。后续将继续学习面向对象、常用模块与实战案例。</p>]]></content>
      
      
      <categories>
          
          <category> 编程笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 编程学习 </tag>
            
            <tag> 初学笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>午后，有风</title>
      <link href="/2025/05/25/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/"/>
      <url>/2025/05/25/%E7%94%9F%E6%B4%BB%E9%9A%8F%E7%AC%94/</url>
      
        <content type="html"><![CDATA[<h1 id="✨☀️-午后，有风-🌿✨"><a href="#✨☀️-午后，有风-🌿✨" class="headerlink" title="✨☀️ 午后，有风 🌿✨"></a>✨☀️ <strong>午后，有风</strong> 🌿✨</h1><hr><p>阳光透过窗帘缝隙洒进来，斑驳地落在木地板上，像极了小时候奶奶家屋檐下晃动的光影。风从阳台那头轻轻吹来，不冷不热，恰到好处。桌上茶还温着 🍵，书页半开着 📖，猫伸了个懒腰 🐱，蹲在阳光里打着哈欠。这一刻，像极了理想中的生活片段。</p><hr><p>城市的节奏总是太快，快到人们来不及和自己对话，来不及看看天是否蔚蓝 🌤️，云是否飘得从容 ☁️。可是在这样一个不需要赶路的午后，我突然意识到，原来生活并不需要太多仪式感，它本身就是一场平凡的奇迹 ✨。</p><hr><p>我想起小时候的夏天，赤脚踩在村头的石板路上 👣，耳边是蝉鸣和远处老牛的哞声 🐄。那时候没有手机，没有网络，甚至连电视都是奢侈的。可我们从未觉得无聊，一根树枝 🌿，一片叶子 🍃，一场雨 ☔，就能编织出一整个童年的幻想。</p><hr><p>长大后，我们有了车票 🚉、密码 🔑、日历提醒 📅 和导航系统 🧭，却似乎忘记了如何在风中停下脚步。其实世界从未改变，只是我们渐渐学会了匆忙。慢一点，又何妨？泡一壶茶 🍵，听一段老歌 🎶，让自己和生活握个手言和。</p><hr><p>风还在吹 🍃，阳光也依然温柔 ☀️。我把书翻到下一页 📖，猫窝进我的膝头 🐱。窗外传来楼下小孩的笑声 😂，像一串串风铃 🔔，敲醒了日常的温柔。</p><hr><p>这一刻，我知道，我还在生活，而不只是活着。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活随笔 </tag>
            
            <tag> 午后时光 </tag>
            
            <tag> 心灵感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中的数据类型转换</title>
      <link href="/2025/05/19/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/"/>
      <url>/2025/05/19/python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02/</url>
      
        <content type="html"><![CDATA[<p><img src="/img/%E6%96%87%E7%AB%A0%E5%9B%BE1.jpg" alt="Python数据类型转换"><br>在 Python 中，不同的数据类型之间可以在特定场景下进行转换，例如字符串转数字、数字转字符串等。</p><h2 id="一、常见的转换语句"><a href="#一、常见的转换语句" class="headerlink" title="一、常见的转换语句"></a>一、常见的转换语句</h2><ol><li><code>int(x)</code>：将 <code>x</code> 转换成一个整数</li><li><code>float(x)</code>：将 <code>x</code> 转换成一个浮点数</li><li><code>str(x)</code>：将对象 <code>x</code> 转换为字符串</li></ol><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><ul><li>任意类型都可以转换为字符串；</li><li>将字符串转换成数字时，<strong>必须保证字符串内容是数字</strong>，文字不可以；</li><li>浮点数转整数会丢失精度（小数部分被舍弃）。</li></ul><h2 id="二、示例程序"><a href="#二、示例程序" class="headerlink" title="二、示例程序"></a>二、示例程序</h2><pre><code class="language-python"># 将数字类型转换成字符串num_str = str(11)print(type(num_str), num_str)# 将字符串转换成整数num_int = int(&quot;12&quot;)print(type(num_int), num_int)# 将字符串转换成浮点数num_float = float(&quot;14&quot;)print(type(num_float), num_float)</code></pre>]]></content>
      
      
      <categories>
          
          <category> Python教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python基础 </tag>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你的名字剧情解析</title>
      <link href="/2025/05/19/%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97%E7%94%B5%E5%BD%B1%E8%A7%A3%E6%9E%90/"/>
      <url>/2025/05/19/%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97%E7%94%B5%E5%BD%B1%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p><img src="/img/haibao.jpg" alt="你的名字电影海报"></p><p>《你的名字。》是新海诚执导的奇幻爱情动画电影，讲述了男女主角跨越时空的奇妙相遇与命运交织。以下从剧情脉络、角色设定和主题内核三方面展开解析：</p><h2 id="🌀-一、时空交错的剧情脉络"><a href="#🌀-一、时空交错的剧情脉络" class="headerlink" title="🌀 一、时空交错的剧情脉络"></a>🌀 一、时空交错的剧情脉络</h2><h3 id="🔁-（一）身体互换的开端"><a href="#🔁-（一）身体互换的开端" class="headerlink" title="🔁 （一）身体互换的开端"></a>🔁 （一）身体互换的开端</h3><p>糸守镇少女<strong>三叶</strong>（宫水三叶）生活在千年彗星坠落形成的湖泊旁，因家族神社职责被迫制作口嚼酒，内心向往东京的都市生活。某天她梦见自己变成东京男高中生<strong>泷</strong>（立花泷），拥有男性身体并体验繁华都市生活。不久后，两人发现并非梦境，而是真实的<strong>身体互换</strong>，且无固定规律。<br><strong>关键情节</strong>：</p><ul><li>以日记和行程表约定规则，避免身份暴露；</li><li>互换中渐生情愫，伪泷（三叶灵魂）帮泷约到打工前辈奥寺美纪，却在约会当日互换停止，陷入失联。</li></ul><h3 id="⏳-（二）跨越三年的时空谜题"><a href="#⏳-（二）跨越三年的时空谜题" class="headerlink" title="⏳ （二）跨越三年的时空谜题"></a>⏳ （二）跨越三年的时空谜题</h3><p>数月后，泷试图联系三叶未果，凭借记忆前往糸守镇，惊悉小镇<strong>三年前已被彗星陨石摧毁</strong>，全镇遇难（仅因演习提前转移部分村民）。此时他意识到，与自己互换的三叶存在于<strong>三年前的时空</strong>。<br><strong>拯救行动</strong>：</p><ol><li><strong>时空链接</strong>：泷找到山中神社，喝下三叶制作的口嚼酒，借助灵体互换回到三年前；</li><li><strong>小镇危机</strong>：伪三叶（泷灵魂）说服好友早耶香、克彦协助，计划炸掉发电站并通过广播引导村民转移至安全区；</li><li><strong>父女矛盾</strong>：试图说服三叶父亲（镇长）启动应急方案未果，因身份被识破而失败。</li></ol><h3 id="🌇-（三）黄昏之时的命运交织"><a href="#🌇-（三）黄昏之时的命运交织" class="headerlink" title="🌇 （三）黄昏之时的命运交织"></a>🌇 （三）黄昏之时的命运交织</h3><p>在<strong>黄昏之时</strong>（昼夜交替、灵气最强的时刻），泷与三叶以灵体形态相遇，试图写下彼此名字避免遗忘。然而时间线复原后，泷手上只留下三叶写的“喜欢你”，两人记忆逐渐模糊，但情感羁绊未消。<br><strong>核心场景</strong>：</p><ul><li>三叶曾前往东京寻找泷，将红丝带赠予三年前的他，成为跨越时空的信物；</li><li>五年后，已毕业的泷与三叶在东京街头重逢，虽忘记姓名，却因红丝带和似曾相识的感觉相认，以“你的名字是？”收尾。</li></ul><h2 id="🎭-二、角色与象征意义"><a href="#🎭-二、角色与象征意义" class="headerlink" title="🎭 二、角色与象征意义"></a>🎭 二、角色与象征意义</h2><table><thead><tr><th>角色</th><th>人物设定</th><th>象征意义</th></tr></thead><tbody><tr><td><strong>三叶</strong> 🌸</td><td>小镇巫女，厌倦传统生活，渴望改变，勇敢坚韧，以口嚼酒和红丝带连接时空。</td><td>代表对宿命的反抗与纯真情感的坚守。</td></tr><tr><td><strong>泷</strong> 🚶‍♂️</td><td>东京高中生，热血直率，凭借执着跨越时空拯救爱人与小镇。</td><td>象征现代青年的行动力与对命运的不屈。</td></tr><tr><td><strong>红丝带</strong> 🎀</td><td>三叶的发带，被泷保存三年，成为两人记忆与情感的物理载体。</td><td>时空羁绊的具象化，暗示“丝线”（糸）在日语中与“缘分”的关联。</td></tr><tr><td><strong>彗星</strong> ☄️</td><td>引发灾难的天体，既是毁灭的象征，也是推动两人相遇、改变命运的关键要素。</td><td>命运的无常与机遇的隐喻：灾难带来分离，却也催生跨越时空的救赎。</td></tr></tbody></table><h2 id="🧠-三、主题内核：爱与时空的哲学思考"><a href="#🧠-三、主题内核：爱与时空的哲学思考" class="headerlink" title="🧠 三、主题内核：爱与时空的哲学思考"></a>🧠 三、主题内核：爱与时空的哲学思考</h2><h3 id="🧩-（一）记忆与情感的博弈"><a href="#🧩-（一）记忆与情感的博弈" class="headerlink" title="🧩 （一）记忆与情感的博弈"></a>🧩 （一）记忆与情感的博弈</h3><p>影片探讨了<strong>记忆消退而情感永存</strong>的命题：泷与三叶忘记彼此姓名，却始终怀揣“寻找重要之人”的直觉。正如三叶手心的“喜欢你”，超越文字成为潜意识的情感烙印，印证了“真爱无需铭记细节，只需心有灵犀”。</p><h3 id="🌐-（二）个体与群体的责任"><a href="#🌐-（二）个体与群体的责任" class="headerlink" title="🌐 （二）个体与群体的责任"></a>🌐 （二）个体与群体的责任</h3><p>影片中，泷在三叶身体中试图拯救糸守居民，不仅是出于对三叶的情感，更承担起拯救他人生命的责任。个体的“爱”最终扩展为对集体的“守护”，体现出灾难中的人性光辉与担当精神。</p>]]></content>
      
      
      <categories>
          
          <category> 影视解析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动漫电影 </tag>
            
            <tag> 新海诚作品 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/05/19/%E6%96%87%E7%AB%A0/"/>
      <url>/2025/05/19/%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/05/19/hello-world/"/>
      <url>/2025/05/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
